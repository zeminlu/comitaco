//
// TACO: Translation of Annotated COde
// Copyright (c) 2010 Universidad de Buenos Aires
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA,
// 02110-1301, USA

//-------------- ar_edu_dynjml4alloy_jml_LinkList --------------//
module ar_edu_dynjml4alloy_jml_LinkList
sig ar_edu_dynjml4alloy_jml_LinkList extends java_lang_Object {}
{}
field size:(ar_edu_dynjml4alloy_jml_LinkList)->one(Int) {}
field prev:(ar_edu_dynjml4alloy_jml_LinkList)->one(ar_edu_dynjml4alloy_jml_LinkList_inner_Value+null) {}
field aSeq:(ar_edu_dynjml4alloy_jml_LinkList)->one(org_jmlspecs_models_JMLObjectSequence) {}
field next:(ar_edu_dynjml4alloy_jml_LinkList)->one(ar_edu_dynjml4alloy_jml_LinkList_inner_Value+null) {}
field tail:(ar_edu_dynjml4alloy_jml_LinkList)->one(ar_edu_dynjml4alloy_jml_LinkList_inner_Value+null) {}
field head:(ar_edu_dynjml4alloy_jml_LinkList)->one(ar_edu_dynjml4alloy_jml_LinkList_inner_Value+null) {}

invariant
   some cs_return_has_5:boolean | {
     (
       some has_return_0:boolean | {
         (
           callSpec has[fun_reach[thiz.head,ar_edu_dynjml4alloy_jml_LinkList_inner_Value,next],has_return_0,thiz.tail])
         and 
         equ[cs_return_has_5,
            has_return_0]
       
       }
     )
     implies 
             (
               some cs_return_int_size_6:Int | {
                 (
                   some int_size_return_0:Int | {
                     (
                       callSpec int_size[fun_reach[thiz.head,ar_edu_dynjml4alloy_jml_LinkList_inner_Value,next],int_size_return_0])
                     and 
                     equ[cs_return_int_size_6,
                        int_size_return_0]
                   
                   }
                 )
                 implies 
                         (
                           (
                             equ[thiz.head,
                                null]
                             and 
                             equ[thiz.tail,
                                null]
                             and 
                             equ[thiz.size,
                                0]
                           )
                           or 
                           (
                             equ[(thiz.head).prev,
                                null]
                             and 
                             equ[(thiz.tail).next,
                                null]
                             and 
                             equ[cs_return_int_size_6,
                                thiz.size]
                             and 
                             (
                               cs_return_has_5=true)
                             and 
                             (
                               all v:ar_edu_dynjml4alloy_jml_LinkList_inner_Value+null | {
                                 (
                                   some cs_return_has_4:boolean | {
                                     (
                                       some has_return_1:boolean | {
                                         (
                                           callSpec has[fun_reach[thiz.head,ar_edu_dynjml4alloy_jml_LinkList_inner_Value,next],has_return_1,v])
                                         and 
                                         equ[cs_return_has_4,
                                            has_return_1]
                                       
                                       }
                                     )
                                     implies 
                                             liftExpression[cs_return_has_4]
                                   
                                   }
                                 )
                                 implies 
                                         (
                                           neq[v.next,
                                              null]
                                           implies 
                                                   equ[(v.next).prev,
                                                      v]
                                         )
                               
                               }
                             )
                           )
                         )
               
               }
             )
   
   }


represents (thiz).(aSeq) such that some cs_return_get_9:java_lang_Object+null | {
  (
    some get_return_0:java_lang_Object+null | {
      (
        callSpec get[thiz.aSeq,get_return_0,sub[thiz.size,1]])
      and 
      equ[cs_return_get_9,
         get_return_0]
    
    }
  )
  implies 
          (
            some cs_return_get_10:java_lang_Object+null | {
              (
                some get_return_1:java_lang_Object+null | {
                  (
                    callSpec get[thiz.aSeq,get_return_1,0])
                  and 
                  equ[cs_return_get_10,
                     get_return_1]
                
                }
              )
              implies 
                      (
                        some cs_return_isEmpty_11:boolean | {
                          (
                            some isEmpty_return_0:boolean | {
                              (
                                callSpec isEmpty[thiz.aSeq,isEmpty_return_0])
                              and 
                              equ[cs_return_isEmpty_11,
                                 isEmpty_return_0]
                            
                            }
                          )
                          implies 
                                  (
                                    some cs_return_int_size_12:Int | {
                                      (
                                        some int_size_return_1:Int | {
                                          (
                                            callSpec int_size[thiz.aSeq,int_size_return_1])
                                          and 
                                          equ[cs_return_int_size_12,
                                             int_size_return_1]
                                        
                                        }
                                      )
                                      implies 
                                              (
                                                equ[thiz.size,
                                                   cs_return_int_size_12]
                                                and 
                                                (
                                                  equ[thiz.head,
                                                     null]
                                                  implies 
                                                          (
                                                            cs_return_isEmpty_11=true)
                                                )
                                                and 
                                                (
                                                  neq[thiz.head,
                                                     null]
                                                  implies 
                                                          (
                                                            equ[thiz.head,
                                                               cs_return_get_10]
                                                            and 
                                                            equ[thiz.tail,
                                                               cs_return_get_9]
                                                          )
                                                )
                                                and 
                                                (
                                                  all i:Int | {
                                                    (
                                                      gte[i,
                                                         0]
                                                      and 
                                                      lt[i,
                                                        sub[thiz.size,1]]
                                                    )
                                                    implies 
                                                            (
                                                              some cs_return_get_7:java_lang_Object+null | {
                                                                (
                                                                  some get_return_2:java_lang_Object+null | {
                                                                    (
                                                                      callSpec get[thiz.aSeq,get_return_2,add[i,1]])
                                                                    and 
                                                                    equ[cs_return_get_7,
                                                                       get_return_2]
                                                                  
                                                                  }
                                                                )
                                                                implies 
                                                                        (
                                                                          some cs_return_get_8:java_lang_Object+null | {
                                                                            (
                                                                              some get_return_3:java_lang_Object+null | {
                                                                                (
                                                                                  callSpec get[thiz.aSeq,get_return_3,i])
                                                                                and 
                                                                                equ[cs_return_get_8,
                                                                                   get_return_3]
                                                                              
                                                                              }
                                                                            )
                                                                            implies 
                                                                                    equ[(((ar_edu_dynjml4alloy_jml_LinkList_inner_Value+null)&(cs_return_get_8))).next,
                                                                                       cs_return_get_7]
                                                                          
                                                                          }
                                                                        )
                                                              
                                                              }
                                                            )
                                                  
                                                  }
                                                )
                                              )
                                    
                                    }
                                  )
                        
                        }
                      )
            
            }
          )

}

program ar_edu_dynjml4alloy_jml_LinkList::get[
  var thiz:ar_edu_dynjml4alloy_jml_LinkList,
  var throw:AssertionFailure+java_lang_Exception+null,
  var return:ar_edu_dynjml4alloy_jml_LinkList_inner_Value+null,
  var index:Int] 
Specification 
{
  SpecCase #0 {
   requires {
      (
        throw=null)
      and 
      (
        some cs_return_int_size_1:Int | {
          (
            some int_size_return_2:Int | {
              (
                callSpec int_size[thiz.aSeq,throw,int_size_return_2])
              and 
              equ[cs_return_int_size_1,
                 int_size_return_2]
            
            }
          )
          implies 
                  (
                    gte[index,
                       0]
                    and 
                    lt[index,
                      cs_return_int_size_1]
                  )
        
        }
      )
   }
   
   ensures {
      (
        throw'=null)
      and 
      (
        some cs_return_get_2:java_lang_Object+null | {
          (
            some get_return_4:java_lang_Object+null | {
              (
                callSpec get[thiz.aSeq,throw,get_return_4,index])
              and 
              equ[cs_return_get_2,
                 get_return_4]
            
            }
          )
          implies 
                  equ[return',
                     cs_return_get_2]
        
        }
      )
   }
  }
  SpecCase #1 {
   requires {
      (
        not (
          throw=null)
      )
      and 
      (
        some cs_return_int_size_3:Int | {
          (
            some int_size_return_3:Int | {
              (
                callSpec int_size[thiz.aSeq,throw,int_size_return_3])
              and 
              equ[cs_return_int_size_3,
                 int_size_return_3]
            
            }
          )
          implies 
                  (
                    lt[index,
                      0]
                    or 
                    gte[index,
                       cs_return_int_size_3]
                  )
        
        }
      )
   }
   
   ensures {
      (
        not (
          throw'=null)
      )
      and 
      instanceOf[throw',
                java_lang_IndexOutOfBoundsException+null]
   }
  }
}
Implementation 

   {
      throw:=null;
      {
         var es_var__1:boolean;
         if lt[index,
           0]{
            es_var__1:=true;
         } else {
            if gte[index,
               thiz.size]{
               es_var__1:=true;
            } else {
               es_var__1:=false;
            };
         };
         if es_var__1=true   {
               createObject<java_lang_IndexOutOfBoundsException>[throw];
               call Constructor[throw,throw];
            
            }
          else {
            skip;
         };
         if equ[index,
            0]{
            return:=thiz.head;
         } else {
            skip;
         };
         if equ[index,
            sub[thiz.size,1]]{
            return:=thiz.tail;
         } else {
            skip;
         };
         var value:ar_edu_dynjml4alloy_jml_LinkList_inner_Value+null;
         if lte[index,
            sshr[thiz.size,1]]   {
               var i:Int;
               i:=0;
               value:=thiz.head;
               while lt[i,
                 index]
               
                  {
                     value:=value.next;
                     i:=add[i,1];
                  
                  }
               ;
            
            }
          else    {
               var i:Int;
               i:=thiz.size;
               value:=thiz.tail;
               while gt[i,
                 index]
               
                  {
                     value:=value.prev;
                     i:=sub[i,1];
                  
                  }
               ;
            
            }
         ;
         return:=value;
      
      }
   
   }



