<<<<<<< HEAD
BugLineMarker dummy=new BugLineMarker();
SinglyLinkedListNode current;
boolean res;
current=this.header;
res=false;
if(!(res == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(!(value_param != null)){throw new RuntimeException();}
if(value_param == current.value){throw new RuntimeException();}
equalVal=false;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(res == false && current != null){throw new RuntimeException();}
//mutID 2
<<<<<<< HEAD
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
//mutID 0
current=this.header.next; //mutGenLimit 1
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(!(value_param != null)){throw new RuntimeException();}
if(!(value_param == current.value)){throw new RuntimeException();}
equalVal=true;
if(!(equalVal == true)){throw new RuntimeException();}
result=true;
//mutID 2
current=current.next; //            current = current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 3
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
//mutID 0
current=this.header.next; //mutGenLimit 1
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(!(value_param != null)){throw new RuntimeException();}
if(!(value_param == current.value)){throw new RuntimeException();}
equalVal=true;
if(!(equalVal == true)){throw new RuntimeException();}
result=true;
//mutID 2
current=current.next; //            current = current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 3
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
//mutID 0
current=this.header.next; //mutGenLimit 1
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(!(value_param != null)){throw new RuntimeException();}
if(!(value_param == current.value)){throw new RuntimeException();}
equalVal=true;
if(!(equalVal == true)){throw new RuntimeException();}
result=true;
//mutID 2
current=current.next; //            current = current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 3
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
//mutID 0
current=this.header.next; //mutGenLimit 1
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(!(value_param != null)){throw new RuntimeException();}
if(!(value_param == current.value)){throw new RuntimeException();}
equalVal=true;
if(!(equalVal == true)){throw new RuntimeException();}
result=true;
//mutID 2
current=current.next; //            current = current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 3
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
//mutID 0
current=this.header.next; //mutGenLimit 1
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(!(value_param != null)){throw new RuntimeException();}
if(!(value_param == current.value)){throw new RuntimeException();}
equalVal=true;
if(!(equalVal == true)){throw new RuntimeException();}
result=true;
//mutID 2
current=current.next; //            current = current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 3
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
//mutID 0
current=this.header.next; //mutGenLimit 1
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(!(value_param != null)){throw new RuntimeException();}
if(!(value_param == current.value)){throw new RuntimeException();}
equalVal=true;
if(!(equalVal == true)){throw new RuntimeException();}
result=true;
//mutID 2
current=current.next; //            current = current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 3
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
//mutID 0
current=this.header.next; //mutGenLimit 1
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(!(value_param != null)){throw new RuntimeException();}
if(!(value_param == current.value)){throw new RuntimeException();}
equalVal=true;
if(!(equalVal == true)){throw new RuntimeException();}
result=true;
//mutID 2
current=current.next; //            current = current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 3
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
//mutID 0
current=this.header.next; //mutGenLimit 1
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(!(value_param != null)){throw new RuntimeException();}
if(!(value_param == current.value)){throw new RuntimeException();}
equalVal=true;
if(!(equalVal == true)){throw new RuntimeException();}
result=true;
//mutID 2
current=current.next; //            current = current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 3
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
//mutID 0
current=this.header.next; //mutGenLimit 1
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(!(value_param != null)){throw new RuntimeException();}
if(!(value_param == current.value)){throw new RuntimeException();}
equalVal=true;
if(!(equalVal == true)){throw new RuntimeException();}
result=true;
//mutID 2
current=current.next; //            current = current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 3
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
//mutID 0
current=this.header.next; //mutGenLimit 1
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(!(value_param != null)){throw new RuntimeException();}
if(!(value_param == current.value)){throw new RuntimeException();}
equalVal=true;
if(!(equalVal == true)){throw new RuntimeException();}
result=true;
//mutID 2
current=current.next; //            current = current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 3
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(value_param != null){throw new RuntimeException();}
equalVal=false;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 2
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(value_param != null){throw new RuntimeException();}
equalVal=false;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 2
return result; //                return !result; //mutGenLimit 1
<<<<<<< HEAD
=======
current=this.header.next; //mutGenLimit 1
res=false;
if(res == false && current != null){throw new RuntimeException();}
//mutID 3
return res; //                return !result; //mutGenLimit 1
>>>>>>> unsat error lines
=======
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(value_param != null){throw new RuntimeException();}
equalVal=false;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 2
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(value_param != null){throw new RuntimeException();}
equalVal=false;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 2
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(value_param != null){throw new RuntimeException();}
equalVal=false;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 2
return result; //                return !result; //mutGenLimit 1
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
if(!(result == false && current != null)){throw new RuntimeException();}
boolean equalVal;
if(value_param == null && current.value == null){throw new RuntimeException();}
if(value_param != null){throw new RuntimeException();}
equalVal=false;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
//mutID 2
return result; //                return !result; //mutGenLimit 1
fajita_roopsGoal_initialization();
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
boolean fajita_cicle_0=false;
if(!(result == false && current != null)){throw new RuntimeException();}
fajita_cicle_0=true;
roops_goal_0=true;
boolean equalVal;
if(!(value_param == null && current.value == null)){throw new RuntimeException();}
roops_goal_2=true;
//mutID 0
equalVal=true; //              equalVal = false; //mutGenLimit 1
if(!(equalVal == true)){throw new RuntimeException();}
roops_goal_8=true;
result=true;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
roops_goal_1=true;
//mutID 2
return result; //                return !result; //mutGenLimit 1
fajita_roopsGoal_initialization();
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
boolean fajita_cicle_0=false;
if(!(result == false && current != null)){throw new RuntimeException();}
fajita_cicle_0=true;
roops_goal_0=true;
boolean equalVal;
if(!(value_param == null && current.value == null)){throw new RuntimeException();}
roops_goal_2=true;
//mutID 0
equalVal=true; //              equalVal = false; //mutGenLimit 1
if(!(equalVal == true)){throw new RuntimeException();}
roops_goal_8=true;
result=true;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
roops_goal_1=true;
//mutID 2
return result; //                return !result; //mutGenLimit 1
fajita_roopsGoal_initialization();
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
boolean fajita_cicle_0=false;
if(!(result == false && current != null)){throw new RuntimeException();}
fajita_cicle_0=true;
roops_goal_0=true;
boolean equalVal;
if(!(value_param == null && current.value == null)){throw new RuntimeException();}
roops_goal_2=true;
//mutID 0
equalVal=true; //              equalVal = false; //mutGenLimit 1
if(!(equalVal == true)){throw new RuntimeException();}
roops_goal_8=true;
result=true;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
roops_goal_1=true;
//mutID 2
return result; //                return !result; //mutGenLimit 1
fajita_roopsGoal_initialization();
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
boolean fajita_cicle_0=false;
if(!(result == false && current != null)){throw new RuntimeException();}
fajita_cicle_0=true;
roops_goal_0=true;
boolean equalVal;
if(!(value_param == null && current.value == null)){throw new RuntimeException();}
roops_goal_2=true;
//mutID 0
equalVal=true; //              equalVal = false; //mutGenLimit 1
if(!(equalVal == true)){throw new RuntimeException();}
roops_goal_8=true;
result=true;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
roops_goal_1=true;
//mutID 2
return result; //                return !result; //mutGenLimit 1
fajita_roopsGoal_initialization();
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
boolean fajita_cicle_0=false;
if(!(result == false && current != null)){throw new RuntimeException();}
fajita_cicle_0=true;
roops_goal_0=true;
boolean equalVal;
if(!(value_param == null && current.value == null)){throw new RuntimeException();}
roops_goal_2=true;
//mutID 0
equalVal=true; //              equalVal = false; //mutGenLimit 1
if(!(equalVal == true)){throw new RuntimeException();}
roops_goal_8=true;
result=true;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
roops_goal_1=true;
//mutID 2
return result; //                return !result; //mutGenLimit 1
fajita_roopsGoal_initialization();
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
boolean fajita_cicle_0=false;
if(!(result == false && current != null)){throw new RuntimeException();}
fajita_cicle_0=true;
roops_goal_0=true;
boolean equalVal;
if(!(value_param == null && current.value == null)){throw new RuntimeException();}
roops_goal_2=true;
//mutID 0
equalVal=true; //              equalVal = false; //mutGenLimit 1
if(!(equalVal == true)){throw new RuntimeException();}
roops_goal_8=true;
result=true;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
roops_goal_1=true;
//mutID 2
return result; //                return !result; //mutGenLimit 1
fajita_roopsGoal_initialization();
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
boolean fajita_cicle_0=false;
if(!(result == false && current != null)){throw new RuntimeException();}
fajita_cicle_0=true;
roops_goal_0=true;
boolean equalVal;
if(!(value_param == null && current.value == null)){throw new RuntimeException();}
roops_goal_2=true;
//mutID 0
equalVal=true; //              equalVal = false; //mutGenLimit 1
if(!(equalVal == true)){throw new RuntimeException();}
roops_goal_8=true;
result=true;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
roops_goal_1=true;
//mutID 2
return result; //                return !result; //mutGenLimit 1
fajita_roopsGoal_initialization();
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
boolean fajita_cicle_0=false;
if(!(result == false && current != null)){throw new RuntimeException();}
fajita_cicle_0=true;
roops_goal_0=true;
boolean equalVal;
if(!(value_param == null && current.value == null)){throw new RuntimeException();}
roops_goal_2=true;
//mutID 0
equalVal=true; //              equalVal = false; //mutGenLimit 1
if(!(equalVal == true)){throw new RuntimeException();}
roops_goal_8=true;
result=true;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
roops_goal_1=true;
//mutID 2
return result; //                return !result; //mutGenLimit 1
fajita_roopsGoal_initialization();
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
boolean fajita_cicle_0=false;
if(!(result == false && current != null)){throw new RuntimeException();}
fajita_cicle_0=true;
roops_goal_0=true;
boolean equalVal;
if(!(value_param == null && current.value == null)){throw new RuntimeException();}
roops_goal_2=true;
//mutID 0
equalVal=true; //              equalVal = false; //mutGenLimit 1
if(!(equalVal == true)){throw new RuntimeException();}
roops_goal_8=true;
result=true;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
roops_goal_1=true;
//mutID 2
return result; //                return !result; //mutGenLimit 1
fajita_roopsGoal_initialization();
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
boolean fajita_cicle_0=false;
if(!(result == false && current != null)){throw new RuntimeException();}
fajita_cicle_0=true;
roops_goal_0=true;
boolean equalVal;
if(!(value_param == null && current.value == null)){throw new RuntimeException();}
roops_goal_2=true;
//mutID 0
equalVal=true; //              equalVal = false; //mutGenLimit 1
if(!(equalVal == true)){throw new RuntimeException();}
roops_goal_8=true;
result=true;
//mutID 1
current=current.next.next; //mutGenLimit 1
if(result == false && current != null){throw new RuntimeException();}
roops_goal_1=true;
//mutID 2
return result; //                return !result; //mutGenLimit 1
<<<<<<< HEAD
>>>>>>> instru
=======
fajita_roopsGoal_initialization();
SinglyLinkedListNode current;
boolean result;
current=this.header;
result=false;
boolean fajita_cicle_0=false;
if(result == false && current != null){throw new RuntimeException();}
if(!(!fajita_cicle_0)){throw new RuntimeException();}
roops_goal_1=true;
//mutID 2
return result; //                return !result; //mutGenLimit 1
=======
>>>>>>> lulafix
fajita_roopsGoal_initialization();
roops.core.objects.SinglyLinkedListNode current; //lineNumber=36
BugLineMarker dummy; //lineNumber=37
boolean result; //lineNumber=38
current=this.header; //lineNumber=40
result=false; //lineNumber=42
boolean fajita_cicle_0=false; //lineNumber=44
if(!(result == false && current != null)){throw new RuntimeException();}
fajita_cicle_0=true; //lineNumber=47
roops_goal_0=true; //lineNumber=48
boolean equalVal; //lineNumber=49
if(value_param != null && current.value == null){throw new RuntimeException();}
roops_goal_3=true; //lineNumber=56
if(!(value_param != null)){throw new RuntimeException();}
roops_goal_4=true; //lineNumber=58
if(!(value_param == current.value)){throw new RuntimeException();}
roops_goal_6=true; //lineNumber=60
equalVal=true; //lineNumber=61
if(!(equalVal == true)){throw new RuntimeException();}
roops_goal_8=true; //lineNumber=72
result=false; //lineNumber=73
current=current.next; //lineNumber=78
if(!(result == false && current != null)){throw new RuntimeException();}
fajita_cicle_0=true; //lineNumber=47
roops_goal_0=true; //lineNumber=48
boolean equalVal; //lineNumber=49
if(value_param != null && current.value == null){throw new RuntimeException();}
roops_goal_3=true; //lineNumber=56
if(!(value_param != null)){throw new RuntimeException();}
roops_goal_4=true; //lineNumber=58
if(value_param == current.value){throw new RuntimeException();}
roops_goal_7=true; //lineNumber=63
equalVal=false; //lineNumber=64
if(equalVal == true){throw new RuntimeException();}
roops_goal_9=true; //lineNumber=75
current=current.next; //lineNumber=78
if(result == false && current != null){throw new RuntimeException();}
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
if(!(!fajita_cicle_0)){throw new RuntimeException();}
<<<<<<< HEAD
roops_goal_1=true;
<<<<<<< HEAD
//mutID 2
return result; //                return !result; //mutGenLimit 1
=======
return res; //                return !result; //mutGenLimit 1
>>>>>>> sequential-als
>>>>>>> more
=======
 //lineNumber=108return result;
 //lineNumber=110
>>>>>>> lulafix
=======
roops_goal_1=true; //lineNumber=108
=======
__marker__.mark(); //lineNumber=108
>>>>>>> chica pura chica pura
return result; //lineNumber=110
>>>>>>> como te cabe mi picadura
=======
if(!(!fajita_cicle_0)){throw new RuntimeException();}
roops_goal_1=true; //lineNumber=104
__marker__.mark(); //lineNumber=107
//mutID 0
return !result; //mutGenLimit 1 //lineNumber=108
>>>>>>> e
=======
return result; //lineNumber=86
>>>>>>> falta unroll
