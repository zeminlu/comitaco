//-------------- roops_core_objects_LinkedList --------------//
module roops_core_objects_LinkedList
sig roops_core_objects_LinkedList extends java_lang_Object {}
{}
field roops_core_objects_LinkedList_header:(roops_core_objects_LinkedList)->one(null+roops_core_objects_LinkedListNode) {}
field roops_core_objects_LinkedList_size:(roops_core_objects_LinkedList)->one(Int) {}
field roops_core_objects_LinkedList_modCount:(roops_core_objects_LinkedList)->one(Int) {}

object_invariant
   neq[thiz.roops_core_objects_LinkedList_header,
      null]
   and 
   neq[(thiz.roops_core_objects_LinkedList_header).roops_core_objects_LinkedListNode_next,
      null]
   and 
   neq[(thiz.roops_core_objects_LinkedList_header).roops_core_objects_LinkedListNode_previous,
      null]
   and 
   equ[thiz.roops_core_objects_LinkedList_size,
      sub[#(fun_set_difference[(thiz.roops_core_objects_LinkedList_header).(fun_reflexive_closure[roops_core_objects_LinkedListNode_next]),null]),1]]
   and 
   gte[thiz.roops_core_objects_LinkedList_size,
      0]
   and 
   (
     all n:roops_core_objects_LinkedListNode | {
       isSubset[n,
               fun_set_difference[(thiz.roops_core_objects_LinkedList_header).(fun_reflexive_closure[roops_core_objects_LinkedListNode_next]),null]]
       implies 
               (
                 neq[n,
                    null]
                 and 
                 neq[n.roops_core_objects_LinkedListNode_previous,
                    null]
                 and 
                 equ[(n.roops_core_objects_LinkedListNode_previous).roops_core_objects_LinkedListNode_next,
                    n]
                 and 
                 neq[n.roops_core_objects_LinkedListNode_next,
                    null]
                 and 
                 equ[(n.roops_core_objects_LinkedListNode_next).roops_core_objects_LinkedListNode_previous,
                    n]
               )
     
     }
   )



program roops_core_objects_LinkedList::contains[
  var thiz:roops_core_objects_LinkedList,
  var throw:java_lang_Throwable+null,
  var return:boolean,
  var arg:java_lang_Object+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_10:Int;
            var t_11:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  call indexOf[thiz,throw,t_10,arg];
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_11:=(neq[t_10,
                  negate[1]]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=t_11;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::removeNode[
  var thiz:roops_core_objects_LinkedList,
  var throw:java_lang_Throwable+null,
  var node:null+roops_core_objects_LinkedListNode] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_21:Int;
            var t_22:Int;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[node.roops_core_objects_LinkedListNode_previous]
               or 
               isEmptyOrNull[node]
               
               or 
               isEmptyOrNull[node]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  (node.roops_core_objects_LinkedListNode_previous).roops_core_objects_LinkedListNode_next:=node.roops_core_objects_LinkedListNode_next;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[node.roops_core_objects_LinkedListNode_next]
               or 
               isEmptyOrNull[node]
               
               or 
               isEmptyOrNull[node]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  (node.roops_core_objects_LinkedListNode_next).roops_core_objects_LinkedListNode_previous:=node.roops_core_objects_LinkedListNode_previous;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  t_21:=thiz.roops_core_objects_LinkedList_size;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_LinkedList_size:=add[thiz.roops_core_objects_LinkedList_size,negate[1]];
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  t_22:=thiz.roops_core_objects_LinkedList_modCount;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_LinkedList_modCount:=add[thiz.roops_core_objects_LinkedList_modCount,1];
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::createNode[
  var thiz:roops_core_objects_LinkedList,
  var throw:java_lang_Throwable+null,
  var return:null+roops_core_objects_LinkedListNode,
  var value:java_lang_Object+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_17:null+roops_core_objects_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  createObject<roops_core_objects_LinkedListNode>[t_17];
                  if isEmptyOrNull[t_17]{
                     throw:=java_lang_NullPointerExceptionLit;
                  } else {
                     call Constructor[t_17,throw];
                  };
               
               }
             else {
               skip;
            };
            var var_11_node:null+roops_core_objects_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_11_node:=t_17;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[var_11_node]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  var_11_node.roops_core_objects_LinkedListNode_previous:=var_11_node;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[var_11_node]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  var_11_node.roops_core_objects_LinkedListNode_next:=var_11_node;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[var_11_node]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  var_11_node.roops_core_objects_LinkedListNode_value:=value;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=var_11_node;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::indexOf[
  var thiz:roops_core_objects_LinkedList,
  var throw:java_lang_Throwable+null,
  var return:Int,
  var value:java_lang_Object+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var var_4_i:Int;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_4_i:=0;
            } else {
               skip;
            };
            var var_5_node:null+roops_core_objects_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz.roops_core_objects_LinkedList_header]
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  var_5_node:=(thiz.roops_core_objects_LinkedList_header).roops_core_objects_LinkedListNode_next;
               };
            } else {
               skip;
            };
            var var_6_ws_1:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_6_ws_1:=(neq[var_5_node,
                  thiz.roops_core_objects_LinkedList_header]=>(true)else(false));
            } else {
               skip;
            };
            while liftExpression[var_6_ws_1]
            and 
            (
              throw=null)
            and 
            (
              exit_stmt_reached=false)
            
               {
                  var t_8:boolean;
                  var t_9:Int;
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_5_node]
                     or 
                     isEmptyOrNull[thiz]
                     {
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        call isEqualValue[thiz,throw,t_8,var_5_node.roops_core_objects_LinkedListNode_value,value];
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_8=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false)   {
                              return:=var_4_i;
                              exit_stmt_reached:=true;
                           
                           }
                         else {
                           skip;
                        };
                     } else {
                        skip;
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_9:=var_4_i;
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_4_i:=add[var_4_i,1];
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if isEmptyOrNull[var_5_node]{
                        throw:=java_lang_NullPointerExceptionLit;
                     } else {
                        var_5_node:=var_5_node.roops_core_objects_LinkedListNode_next;
                     };
                  } else {
                     skip;
                  };
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_6_ws_1:=(neq[var_5_node,
                        thiz.roops_core_objects_LinkedList_header]=>(true)else(false));
                  } else {
                     skip;
                  };
               
               }
            ;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=negate[1];
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::init[
  var thiz:roops_core_objects_LinkedList,
  var throw:java_lang_Throwable+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_7:null+roops_core_objects_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  call createHeaderNode[thiz,throw,t_7];
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_LinkedList_header:=t_7;
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::containsTest[
  var throw:java_lang_Throwable+null,
  var list:null+roops_core_objects_LinkedList,
  var arg:java_lang_Object+null] 
Specification 
{
  SpecCase #0 {
   ensures {
      liftExpression[false]
   }
   
   ensures {
      equ[throw',
         null]
   }
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_4:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_4:=(neq[list,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_4=true   {
                     var t_3:boolean;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[list]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call contains[list,throw,t_3,arg];
                        };
                     } else {
                        skip;
                     };
                     var var_2_ret_val:boolean;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_2_ret_val:=t_3;
                     } else {
                        skip;
                     };
                  
                  }
                else {
                  skip;
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::Constructor[
  var thiz:roops_core_objects_LinkedList,
  var throw:java_lang_Throwable+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_LinkedList_header:=((null+roops_core_objects_LinkedListNode) & (null));
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_LinkedList_size:=0;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_LinkedList_modCount:=0;
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::addNodeBefore[
  var thiz:roops_core_objects_LinkedList,
  var throw:java_lang_Throwable+null,
  var node:null+roops_core_objects_LinkedListNode,
  var value:java_lang_Object+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_18:null+roops_core_objects_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  call createNode[thiz,throw,t_18,value];
               };
            } else {
               skip;
            };
            var var_12_newNode:null+roops_core_objects_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_12_newNode:=t_18;
            } else {
               skip;
            };
            if isEmptyOrNull[thiz]{
               throw:=java_lang_NullPointerExceptionLit;
            } else {
               call addNode[thiz,throw,var_12_newNode,node];
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::getNode[
  var thiz:roops_core_objects_LinkedList,
  var throw:java_lang_Throwable+null,
  var return:null+roops_core_objects_LinkedListNode,
  var index:Int,
  var endMarkerAllowed:boolean] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_24:boolean;
            var t_26:boolean;
            var t_27:boolean;
            var t_28:boolean;
            var t_30:boolean;
            var t_31:Int;
            var t_34:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_24:=(lt[index,
                 0]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_24=true   {
                     var t_23:java_lang_IndexOutOfBoundsException+null;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_23:=java_lang_IndexOutOfBoundsExceptionLit;
                     } else {
                        skip;
                     };
                     throw:=t_23;
                     exit_stmt_reached:=true;
                  
                  }
                else {
                  skip;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_27:=Not[endMarkerAllowed];
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_28:=(equ[index,
                  thiz.roops_core_objects_LinkedList_size]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_27=true{
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     if t_28=true{
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           t_26:=true;
                        } else {
                           skip;
                        };
                     } else {
                        if (
                          throw=null)
                        and 
                        (
                          exit_stmt_reached=false){
                           t_26:=false;
                        } else {
                           skip;
                        };
                     };
                  } else {
                     skip;
                  };
               } else {
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     t_26:=false;
                  } else {
                     skip;
                  };
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_26=true   {
                     var t_25:java_lang_IndexOutOfBoundsException+null;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_25:=java_lang_IndexOutOfBoundsExceptionLit;
                     } else {
                        skip;
                     };
                     throw:=t_25;
                     exit_stmt_reached:=true;
                  
                  }
                else {
                  skip;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_30:=(gt[index,
                 thiz.roops_core_objects_LinkedList_size]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_30=true   {
                     var t_29:java_lang_IndexOutOfBoundsException+null;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_29:=java_lang_IndexOutOfBoundsExceptionLit;
                     } else {
                        skip;
                     };
                     throw:=t_29;
                     exit_stmt_reached:=true;
                  
                  }
                else {
                  skip;
               };
            } else {
               skip;
            };
            var var_13_node:null+roops_core_objects_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  t_31:=sshr[thiz.roops_core_objects_LinkedList_size,1];
               };
            } else {
               skip;
            };
            var var_14_size_div_2:Int;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_14_size_div_2:=t_31;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_34:=(lt[index,
                 var_14_size_div_2]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_34=true   {
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[thiz.roops_core_objects_LinkedList_header]
                        or 
                        isEmptyOrNull[thiz]
                        {
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           var_13_node:=(thiz.roops_core_objects_LinkedList_header).roops_core_objects_LinkedListNode_next;
                        };
                     } else {
                        skip;
                     };
                     var var_15_currentIndex:Int;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_15_currentIndex:=0;
                     } else {
                        skip;
                     };
                     var var_16_ws_2:boolean;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_16_ws_2:=(lt[var_15_currentIndex,
                          index]=>(true)else(false));
                     } else {
                        skip;
                     };
                     while liftExpression[var_16_ws_2]
                     and 
                     (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false)
                     
                        {
                           var t_32:Int;
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if isEmptyOrNull[var_13_node]{
                                 throw:=java_lang_NullPointerExceptionLit;
                              } else {
                                 var_13_node:=var_13_node.roops_core_objects_LinkedListNode_next;
                              };
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_32:=var_15_currentIndex;
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              var_15_currentIndex:=add[var_15_currentIndex,1];
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              var_16_ws_2:=(lt[var_15_currentIndex,
                                index]=>(true)else(false));
                           } else {
                              skip;
                           };
                        
                        }
                     ;
                  
                  }
                else    {
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[thiz]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           var_13_node:=thiz.roops_core_objects_LinkedList_header;
                        };
                     } else {
                        skip;
                     };
                     var var_17_currentIndex:Int;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[thiz]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           var_17_currentIndex:=thiz.roops_core_objects_LinkedList_size;
                        };
                     } else {
                        skip;
                     };
                     var var_18_ws_3:boolean;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_18_ws_3:=(gt[var_17_currentIndex,
                          index]=>(true)else(false));
                     } else {
                        skip;
                     };
                     while liftExpression[var_18_ws_3]
                     and 
                     (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false)
                     
                        {
                           var t_33:Int;
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              if isEmptyOrNull[var_13_node]{
                                 throw:=java_lang_NullPointerExceptionLit;
                              } else {
                                 var_13_node:=var_13_node.roops_core_objects_LinkedListNode_previous;
                              };
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              t_33:=var_17_currentIndex;
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              var_17_currentIndex:=add[var_17_currentIndex,negate[1]];
                           } else {
                              skip;
                           };
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              var_18_ws_3:=(gt[var_17_currentIndex,
                                index]=>(true)else(false));
                           } else {
                              skip;
                           };
                        
                        }
                     ;
                  
                  }
               ;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=var_13_node;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::isEqualValue[
  var thiz:roops_core_objects_LinkedList,
  var throw:java_lang_Throwable+null,
  var return:boolean,
  var value1:java_lang_Object+null,
  var value2:java_lang_Object+null] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_15:boolean;
            var var_9_ret_val:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_15:=(equ[value1,
                  value2]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_15=true{
                  if (
                    throw=null)
                  and 
                  (
                    exit_stmt_reached=false){
                     var_9_ret_val:=true;
                  } else {
                     skip;
                  };
               } else    {
                     var t_14:boolean;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        t_14:=(equ[value1,
                           null]=>(true)else(false));
                     } else {
                        skip;
                     };
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if t_14=true{
                           if (
                             throw=null)
                           and 
                           (
                             exit_stmt_reached=false){
                              var_9_ret_val:=false;
                           } else {
                              skip;
                           };
                        } else    {
                              var t_13:boolean;
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 if isEmptyOrNull[value1]{
                                    throw:=java_lang_NullPointerExceptionLit;
                                 } else {
                                    call equals[value1,throw,t_13,value2];
                                 };
                              } else {
                                 skip;
                              };
                              if (
                                throw=null)
                              and 
                              (
                                exit_stmt_reached=false){
                                 var_9_ret_val:=t_13;
                              } else {
                                 skip;
                              };
                           
                           }
                        ;
                     } else {
                        skip;
                     };
                  
                  }
               ;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=var_9_ret_val;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::addLast[
  var thiz:roops_core_objects_LinkedList,
  var throw:java_lang_Throwable+null,
  var return:boolean,
  var o:java_lang_Object+null] 
Specification 
{
  SpecCase #0 {
   requires {
      not (
        o=null)
   }
   
   ensures {
      (
        throw'=null)
      implies 
              liftExpression[false]
   }
   
   modifies {
   EVERYTHING}
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            if isEmptyOrNull[thiz]
            or 
            isEmptyOrNull[thiz]
            {
               throw:=java_lang_NullPointerExceptionLit;
            } else {
               call addNodeBefore[thiz,throw,thiz.roops_core_objects_LinkedList_header,o];
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=true;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::addNode[
  var thiz:roops_core_objects_LinkedList,
  var throw:java_lang_Throwable+null,
  var nodeToInsert:null+roops_core_objects_LinkedListNode,
  var insertBeforeNode:null+roops_core_objects_LinkedListNode] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_19:Int;
            var t_20:Int;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[nodeToInsert]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  nodeToInsert.roops_core_objects_LinkedListNode_next:=insertBeforeNode;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[nodeToInsert]
               or 
               isEmptyOrNull[insertBeforeNode]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  nodeToInsert.roops_core_objects_LinkedListNode_previous:=insertBeforeNode.roops_core_objects_LinkedListNode_previous;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[insertBeforeNode.roops_core_objects_LinkedListNode_previous]
               or 
               isEmptyOrNull[insertBeforeNode]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  (insertBeforeNode.roops_core_objects_LinkedListNode_previous).roops_core_objects_LinkedListNode_next:=nodeToInsert;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[insertBeforeNode]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  insertBeforeNode.roops_core_objects_LinkedListNode_previous:=nodeToInsert;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  t_19:=thiz.roops_core_objects_LinkedList_size;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_LinkedList_size:=add[thiz.roops_core_objects_LinkedList_size,1];
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  t_20:=thiz.roops_core_objects_LinkedList_modCount;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]
               or 
               isEmptyOrNull[thiz]
               {
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  thiz.roops_core_objects_LinkedList_modCount:=add[thiz.roops_core_objects_LinkedList_modCount,1];
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::createHeaderNode[
  var thiz:roops_core_objects_LinkedList,
  var throw:java_lang_Throwable+null,
  var return:null+roops_core_objects_LinkedListNode] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_16:null+roops_core_objects_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  createObject<roops_core_objects_LinkedListNode>[t_16];
                  if isEmptyOrNull[t_16]{
                     throw:=java_lang_NullPointerExceptionLit;
                  } else {
                     call Constructor[t_16,throw];
                  };
               
               }
             else {
               skip;
            };
            var var_10_linkedListNode:null+roops_core_objects_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_10_linkedListNode:=t_16;
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[var_10_linkedListNode]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  var_10_linkedListNode.roops_core_objects_LinkedListNode_next:=var_10_linkedListNode;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[var_10_linkedListNode]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  var_10_linkedListNode.roops_core_objects_LinkedListNode_previous:=var_10_linkedListNode;
               };
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=var_10_linkedListNode;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::addLastTest[
  var throw:java_lang_Throwable+null,
  var list:null+roops_core_objects_LinkedList,
  var o:java_lang_Object+null] 
Specification 
{
  SpecCase #0 {
   ensures {
      liftExpression[false]
   }
   
   ensures {
      equ[throw',
         null]
   }
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_2:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_2:=(neq[list,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_2=true   {
                     var t_1:boolean;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[list]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call addLast[list,throw,t_1,o];
                        };
                     } else {
                        skip;
                     };
                     var var_1_ret_val:boolean;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_1_ret_val:=t_1;
                     } else {
                        skip;
                     };
                  
                  }
                else {
                  skip;
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::removeIndex[
  var thiz:roops_core_objects_LinkedList,
  var throw:java_lang_Throwable+null,
  var return:java_lang_Object+null,
  var index:Int] 
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_12:null+roops_core_objects_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[thiz]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  call getNode[thiz,throw,t_12,index,false];
               };
            } else {
               skip;
            };
            var var_7_node:null+roops_core_objects_LinkedListNode;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               var_7_node:=t_12;
            } else {
               skip;
            };
            var var_8_oldValue:java_lang_Object+null;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if isEmptyOrNull[var_7_node]{
                  throw:=java_lang_NullPointerExceptionLit;
               } else {
                  var_8_oldValue:=var_7_node.roops_core_objects_LinkedListNode_value;
               };
            } else {
               skip;
            };
            if isEmptyOrNull[thiz]{
               throw:=java_lang_NullPointerExceptionLit;
            } else {
               call removeNode[thiz,throw,var_7_node];
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false)   {
                  return:=var_8_oldValue;
                  exit_stmt_reached:=true;
               
               }
             else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }


program roops_core_objects_LinkedList::removeIndexTest[
  var throw:java_lang_Throwable+null,
  var list:null+roops_core_objects_LinkedList,
  var index:Int] 
Specification 
{
  SpecCase #0 {
   ensures {
      liftExpression[false]
   }
   
   ensures {
      equ[throw',
         null]
   }
  }
}
Implementation 

   {
      skip;
      {
         throw:=null;
         var exit_stmt_reached:boolean;
         exit_stmt_reached:=false;
         {
            var t_6:boolean;
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               t_6:=(neq[list,
                  null]=>(true)else(false));
            } else {
               skip;
            };
            if (
              throw=null)
            and 
            (
              exit_stmt_reached=false){
               if t_6=true   {
                     var t_5:java_lang_Object+null;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        if isEmptyOrNull[list]{
                           throw:=java_lang_NullPointerExceptionLit;
                        } else {
                           call removeIndex[list,throw,t_5,index];
                        };
                     } else {
                        skip;
                     };
                     var var_3_ret_val:java_lang_Object+null;
                     if (
                       throw=null)
                     and 
                     (
                       exit_stmt_reached=false){
                        var_3_ret_val:=t_5;
                     } else {
                        skip;
                     };
                  
                  }
                else {
                  skip;
               };
            } else {
               skip;
            };
         
         }
      
      }
      skip;
   
   }



