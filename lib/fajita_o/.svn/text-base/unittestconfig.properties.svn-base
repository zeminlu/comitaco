#DynJAlloyConfig.Class=ar.edu.dynjalloy.DynJAlloyConfigImpl
DynJAlloyConfig.Class=ar.edu.taco.TacoConfigurator

# No pude encontrar ninguna configuracion que use este parametro.
# Usado en: 
# 			DynalloyFactory.
useCustomRelationalOverride = false


# No pude encontrar ninguna configuracion que use este parametro.
# Usado en: 
# 			DynJAlloyContext
#relevantClasses =


# 
# Usado en: 
# 			PostconditionFormulaMutator: Se utiliza en una funcion que nosotros nunca llamamos (getExpr(AlloyVariable v))
dynamicJavaLangFields = false

#
# Usado en:
# 			DynJAlloyXlatorVisitor: en metodos: visit(JAssert n), visit(JProgramDeclaration node)
assertIsAssume = false

#
# Usado en:
# 			DynJAlloyXlatorVisitor: en metodos: visit(JCreateObject n), visit(DynJAlloyModule node), 
useClassSingletons = false

#
# Usado en:
# 			DynJAlloyXlatorVisitor: en metodos: visit(DynJAlloyModule node),  
classExtendsObject = false

#
# Usado en:
# 			DynJAlloyXlatorVisitor: en metodos: visit(DynJAlloyModule node),  
typeSafety = false

#
# Usado en:
# 			DynJAlloyXlatorVisitor: en metodos: visit(JProgramDeclaration node),  
#classToCheck =  ar.edu.dynjml4alloy.jml.CallSpecTest
classToCheck = ar.edu.taco.jml.LinkList
#
# Usado en:
# 			DynJAlloyXlatorVisitor: en metodos: visit(JProgramDeclaration node),
# se usa tambien como se usaba "dynalloy.toAlloy.assertionToCheck"  
#methodToCheck = dynJML4Alloy_tests_ar_edu_dynjml4alloy_jml_PredicateTestEasyVersion_trivial_0
methodToCheck = get_0

#
# Usado en:
# 			DynJAlloyXlatorVisitor: en metodos: visit(JProgramDeclaration node) 
#			DynJAlloyXlatorVisitor: en metodos: visit(JProgramDeclaration node) 
#			Se utiliza para habilitar el procesamiento verificar "nullPointersExceptions"
#checkNullDereference = true
checkNullDereference = false

#
# Usado en:
#			JmlExpressionXlator
quantifierIncludesNull=true

# Usado en:
# 			PreludeModule: en metodos: static intialization
#			JavaToDynalloyManager: en metodos: 
#builtInModules=java_lang_Boolean
#builtInModules=java_lang_Class
#builtInModules=java_lang_Exception
#builtInModules=java_lang_Throwable
#builtInModules=java_lang_Integer
#builtInModules=java_lang_Object
#builtInModules=java_util_List
#builtInModules=java_util_Map
#builtInModules=java_lang_NullPointerException
#builtInModules=java_lang_RuntimeException
#builtInModules=java_util_Set
#builtInModules=java_lang_SystemArray
#builtInModules=org_jmlspecs_models_JMLObjectSet
#builtInModules=org_jmlspecs_models_JMLObjectSequence



# Usado en: 
# 		   DynAlloyToAlloyManager: Parametros del traductor Dynalloy. Todos estos son opcionales. Utilizadas para la conversion de Dynalloy a Dynjalloy
#
dynalloy.toAlloy.enable=true
#dynalloy.toAlloy.loopUnroll=3

#dynalloy.toAlloy.strictUnrolling=false
#dynalloy.toAlloy.removeQuantifiers=false
#dynalloy.toAlloy.applySimplifications=true

######## JML PARSER

# Usado en: 
# 		   JmlParser: Directorio root de los binarios (.class)
#
jmlParser.appClassPath=bin

# Usado en: 
# 		   JmlParser: Directorio root de los fuentes (.class, .jml, etc...)
#

jmlParser.sourcePathStr=tests

# Usado en: (DEPRECADO) 
# 		   JmlParser: Qualified name de las clases que se parsearan
#

#jmlParser.parse= List<String>  
#jmlParser.parse=ar.edu.taco.jml.LinkList
#jmlParser.parse=ar.edu.taco.EjemploDG
#jmlParser.parse=ar.edu.taco.amelie.dlist.ApacheList