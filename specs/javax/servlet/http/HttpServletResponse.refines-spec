// @(#)$Id: HttpServletResponse.refines-spec,v 1.2 2009/11/05 23:13:13 ddobniewski Exp $
//
// Copyright (C) 2005 Iowa State University
//
// This file is part of the runtime library of the Java Modeling Language.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1,
// of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with JML; see the file LesserGPL.txt.  If not, write to the Free
// Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
// 02110-1301  USA.

/*
 * NOTE: This file has only been partially specified. Feel free to complete.
 * (http://jakarta.apache.org/tomcat/tomcat-5.0-doc/servletapi/)
 */

package javax.servlet.http;

import java.io.IOException;
import javax.servlet.ServletResponse;

/** JML's specification of HttpServletResponse. */
public interface HttpServletResponse extends ServletResponse {
    // INTERFACE SPECIFICATIONS
    /*@
      @ 
      @*/

    // FIELDS

    public static final int SC_CONTINUE; /*@ initially SC_CONTINUE == (byte)100; @*/

    public static final int SC_SWITCHING_PROTOCOLS; /*@ initially SC_SWITCHING_PROTOCOLS == (byte)101; @*/

    public static final int SC_OK; /*@ initially SC_OK == (short)200; @*/

    public static final int SC_CREATED; /*@ initially SC_CREATED == (short)201; @*/

    public static final int SC_ACCEPTED; /*@ initially SC_ACCEPTED == (short)202; @*/

    public static final int SC_NON_AUTHORITATIVE_INFORMATION; /*@ initially SC_NON_AUTHORITATIVE_INFORMATION == (short)203; @*/

    public static final int SC_NO_CONTENT; /*@ initially SC_NO_CONTENT == (short)204; @*/

    public static final int SC_RESET_CONTENT; /*@ initially SC_RESET_CONTENT == (short)205; @*/

    public static final int SC_PARTIAL_CONTENT; /*@ initially SC_PARTIAL_CONTENT == (short)206; @*/

    public static final int SC_MULTIPLE_CHOICES; /*@ initially SC_MULTIPLE_CHOICES == (short)300; @*/

    public static final int SC_MOVED_PERMANENTLY; /*@ initially SC_MOVED_PERMANENTLY == (short)301; @*/

    public static final int SC_MOVED_TEMPORARILY; /*@ initially SC_MOVED_TEMPORARILY == (short)302; @*/

    // public static final int SC_FOUND; /*@ initially SC_FOUND == (short)302; @*/

    public static final int SC_SEE_OTHER; /*@ initially SC_SEE_OTHER == (short)303; @*/

    public static final int SC_NOT_MODIFIED; /*@ initially SC_NOT_MODIFIED == (short)304; @*/

    public static final int SC_USE_PROXY; /*@ initially SC_USE_PROXY == (short)305; @*/

    public static final int SC_TEMPORARY_REDIRECT; /*@ initially SC_TEMPORARY_REDIRECT == (short)307; @*/

    public static final int SC_BAD_REQUEST; /*@ initially SC_BAD_REQUEST == (short)400; @*/

    public static final int SC_UNAUTHORIZED; /*@ initially SC_UNAUTHORIZED == (short)401; @*/

    public static final int SC_PAYMENT_REQUIRED; /*@ initially SC_PAYMENT_REQUIRED == (short)402; @*/

    public static final int SC_FORBIDDEN; /*@ initially SC_FORBIDDEN == (short)403; @*/

    public static final int SC_NOT_FOUND; /*@ initially SC_NOT_FOUND == (short)404; @*/

    public static final int SC_METHOD_NOT_ALLOWED; /*@ initially SC_METHOD_NOT_ALLOWED == (short)405; @*/

    public static final int SC_NOT_ACCEPTABLE; /*@ initially SC_NOT_ACCEPTABLE == (short)406; @*/

    public static final int SC_PROXY_AUTHENTICATION_REQUIRED; /*@ initially SC_PROXY_AUTHENTICATION_REQUIRED == (short)407; @*/

    public static final int SC_REQUEST_TIMEOUT; /*@ initially SC_REQUEST_TIMEOUT == (short)408; @*/

    public static final int SC_CONFLICT; /*@ initially SC_CONFLICT == (short)409; @*/

    public static final int SC_GONE; /*@ initially SC_GONE == (short)410; @*/

    public static final int SC_LENGTH_REQUIRED; /*@ initially SC_LENGTH_REQUIRED == (short)411; @*/

    public static final int SC_PRECONDITION_FAILED; /*@ initially SC_PRECONDITION_FAILED == (short)412; @*/

    public static final int SC_REQUEST_ENTITY_TOO_LARGE; /*@ initially SC_REQUEST_ENTITY_TOO_LARGE == (short)413; @*/

    public static final int SC_REQUEST_URI_TOO_LONG; /*@ initially SC_REQUEST_URI_TOO_LONG == (short)414; @*/

    public static final int SC_UNSUPPORTED_MEDIA_TYPE; /*@ initially SC_UNSUPPORTED_MEDIA_TYPE == (short)415; @*/

    public static final int SC_REQUESTED_RANGE_NOT_SATISFIABLE; /*@ initially SC_REQUESTED_RANGE_NOT_SATISFIABLE == (short)416; @*/

    public static final int SC_EXPECTATION_FAILED; /*@ initially SC_EXPECTATION_FAILED == (short)417; @*/

    public static final int SC_INTERNAL_SERVER_ERROR; /*@ initially SC_INTERNAL_SERVER_ERROR == (short)500; @*/

    public static final int SC_NOT_IMPLEMENTED; /*@ initially SC_NOT_IMPLEMENTED == (short)501; @*/

    public static final int SC_BAD_GATEWAY; /*@ initially SC_BAD_GATEWAY == (short)502; @*/

    public static final int SC_SERVICE_UNAVAILABLE; /*@ initially SC_SERVICE_UNAVAILABLE == (short)503; @*/

    public static final int SC_GATEWAY_TIMEOUT; /*@ initially SC_GATEWAY_TIMEOUT == (short)504; @*/

    public static final int SC_HTTP_VERSION_NOT_SUPPORTED; /*@ initially SC_HTTP_VERSION_NOT_SUPPORTED == (short)505; @*/

    // METHODS

    /*@
      @ 
      @*/
    public void addCookie(Cookie cookie);

    /*@
      @ 
      @*/
    public boolean containsHeader(String name);

    /*@
      @ 
      @*/
    public String encodeURL(String url);

    /*@
      @ 
      @*/
    public String encodeRedirectURL(String url);

    /** @deprecated */
    /*@
      @ 
      @*/
    public String encodeUrl(String url);

    /** @deprecated */
    /*@
      @ 
      @*/
    public String encodeRedirectUrl(String url);

    /*@
      @ 
      @*/
    public void sendError(int sc, String msg) throws IOException;

    /*@
      @ 
      @*/
    public void sendError(int sc) throws IOException;

    /*@
      @ 
      @*/
    public void sendRedirect(String location) throws IOException;

    /*@
      @ 
      @*/
    public void setDateHeader(String name, long date);

    /*@
      @ 
      @*/
    public void addDateHeader(String name, long date);

    /*@
      @ 
      @*/
    public void setHeader(String name, String value);

    /*@
      @ 
      @*/
    public void addHeader(String name, String value);

    /*@
      @ 
      @*/
    public void setIntHeader(String name, int value);

    /*@
      @ 
      @*/
    public void addIntHeader(String name, int value);

    /*@
      @ 
      @*/
    public void setStatus(int sc);

    /** @deprecated */
    /*@
      @ 
      @*/
    public void setStatus(int sc, String sm);

}
