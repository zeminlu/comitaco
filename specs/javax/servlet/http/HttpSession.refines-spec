// @(#)$Id: HttpSession.refines-spec,v 1.2 2009/11/05 23:13:13 ddobniewski Exp $
//
// Copyright (C) 2005 Iowa State University
//
// This file is part of the runtime library of the Java Modeling Language.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1,
// of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with JML; see the file LesserGPL.txt.  If not, write to the Free
// Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
// 02110-1301  USA.

/*
 * NOTE: This file has only been partially specified. Feel free to complete.
 * (http://jakarta.apache.org/tomcat/tomcat-5.0-doc/servletapi/)
 */

package javax.servlet.http;

import java.util.Enumeration;
import javax.servlet.ServletContext;

/** JML's specification of HttpSession. */
public interface HttpSession {
    // INTERFACE SPECIFICATIONS
    /*@
      @ 
      @*/

    // METHODS

    /*@
      @ 
      @*/
    long getCreationTime();

    /*@
      @ 
      @*/
    String getId();

    /*@
      @ 
      @*/
    long getLastAccessedTime();

    /*@
      @ 
      @*/
    ServletContext getServletContext();

    /*@
      @ 
      @*/
    void setMaxInactiveInterval(int interval);

    /*@
      @ 
      @*/
    int getMaxInactiveInterval();

    /** @deprecated */
    /*@
      @ 
      @*/
    HttpSessionContext getSessionContext();

    /*@
      @ 
      @*/
    Object getAttribute(String name);

    /** @deprecated */
    /*@
      @ 
      @*/
    Object getValue(String name);

    /*@
      @ ensures \result != null && \result.elementType == String.class; 
      @*/
    Enumeration getAttributeNames();

    /** @deprecated */
    /*@
      @ 
      @*/
    String[] getValueNames();

    /*@
      @ 
      @*/
    void setAttribute(String name, Object value);

    /** @deprecated */
    /*@
      @ 
      @*/
    void putValue(String name, Object value);

    /*@
      @ 
      @*/
    void removeAttribute(String name);

    /** @deprecated */
    /*@
      @ 
      @*/
    void removeValue(String name);

    /*@
      @ 
      @*/
    void invalidate();

    /*@
      @ 
      @*/
    boolean isNew();

}

