// @(#)$Id: ServletRequest.refines-spec,v 1.2 2009/11/05 23:13:13 ddobniewski Exp $
//
// Copyright (C) 2005 Iowa State University
//
// This file is part of the runtime library of the Java Modeling Language.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public License
// as published by the Free Software Foundation; either version 2.1,
// of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with JML; see the file LesserGPL.txt.  If not, write to the Free
// Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
// 02110-1301  USA.

/*
 * NOTE: This file has only been partially specified. Feel free to complete.
 * (http://jakarta.apache.org/tomcat/tomcat-5.0-doc/servletapi/)
 */

package javax.servlet;

import java.io.BufferedReader;
import java.io.IOException;
import java.util.Enumeration;
import java.util.Locale;
import java.util.Map;

/** JML's specification of ServletRequest */
public interface ServletRequest {
    // INTERFACE SPECIFICATIONS
    /*@
      @ 
      @*/

    // METHODS

    /*@
      @ 
      @*/
    Object getAttribute(String name);

    /*@
      @ ensures \result != null && \result.elementType == String.class;
      @*/
    Enumeration getAttributeNames();

    /*@
      @ 
      @*/
    String getCharacterEncoding();

    /*@
      @ 
      @*/
    void setCharacterEncoding(String env) throws java.io.UnsupportedEncodingException;

    /*@
      @ 
      @*/
    int getContentLength();

    /*@
      @ 
      @*/
    String getContentType();

    /*@
      @ 
      @*/
    ServletInputStream getInputStream() throws IOException;

    /*@
      @ assignable \nothing;
      @*/
    String getParameter(String name);

    /*@
      @ ensures \result != null && \result.elementType == String.class; 
      @*/
    Enumeration getParameterNames();

    /*@
      @ 
      @*/
    String[] getParameterValues(String name);

    /*@
      @ 
      @*/
    Map getParameterMap();

    /*@
      @ 
      @*/
    String getProtocol();

    /*@
      @ 
      @*/
    String getScheme();

    /*@
      @ 
      @*/
    String getServerName();

    /*@
      @ 
      @*/
    int getServerPort();

    /*@
      @ 
      @*/
    BufferedReader getReader() throws IOException;

    /*@
      @ 
      @*/
    String getRemoteAddr();

    /*@
      @ 
      @*/
    String getRemoteHost();

    /*@ public behavior
      @   assignable objectState;
      @*/
    void setAttribute(String name, Object o);

    /*@
      @ 
      @*/
    void removeAttribute(String name);

    /*@
      @ 
      @*/
    Locale getLocale();

    /*@
      @ 
      @*/
    Enumeration getLocales();

    /*@
      @ 
      @*/
    boolean isSecure();

    /*@
      @ 
      @*/
    RequestDispatcher getRequestDispatcher(String path);

    /** @deprecated */
    /*@
      @ 
      @*/
    String getRealPath(String path);

    /*@
      @ 
      @*/
    int getRemotePort();

    /*@
      @ 
      @*/
    String getLocalName();

    /*@
      @ 
      @*/
    String getLocalAddr();

    /*@
      @ 
      @*/
    int getLocalPort();

}

