<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="taco">
	
	<!-- PROPERTIES DEFINITION -->
	<property environment="env" />
	<property name="workspace_loc" value="../" />
	<property name="junit.output.dir" value="junit" />
	<property name="debuglevel" value="source,lines,vars" />
	
	<property name="target" value="1.6" />
	<property name="source" value="1.6" />
	
	<!-- TACO properties definition -->
	<property name="app.id" value="taco" />
	<property name="app.version" value="1.2.0" />
	<property name="app.createdBy" value="The RFM Group at the Universidad de Buenos Aires, Argentina." />

	<!-- Build path -->
	<path id="build.classpath">
		<pathelement location="bin" />
		<pathelement location="lib/alloy4.jar" />
		<pathelement location="lib/dynalloy4.jar" />
		<pathelement location="lib/jdynalloy.jar" />
		<pathelement location="lib/commons-cli-1.2.jar" />
		<pathelement location="lib/commons-collections-3.2.1.jar" />
		<pathelement location="lib/commons-configuration-1.6.jar" />
		<pathelement location="lib/commons-lang-2.4.jar" />
		<pathelement location="lib/commons-logging-1.1.1.jar" />
		<pathelement location="lib/log4j-1.2.15.jar" />
		<pathelement location="lib/antlr.jar" />
		<pathelement location="lib/antlr-3.2.jar" />
		<pathelement location="lib/jml-release.jar" />
		<pathelement location="lib/org.jmlspecs.annotation.jar" />
		<pathelement location="lib/koa/avalon-framework-4.2.0.jar" />
		<pathelement location="lib/koa/bcprov-jdk14-129.jar" />
		<pathelement location="lib/koa/fop.jar" />
		<pathelement location="lib/guava.jar" />
		<pathelement location="lib/java-cup-11a.jar" />
		<pathelement location="lib/edu.mit.csail.sdg.annotations_0.2.5.jar" />
		<pathelement location="lib/junit-4.8.2.jar" />
		<pathelement location="lib/stryker/jml4c.jar" />
		<pathelement location="lib/stryker/jmlruntime.jar" />
		<pathelement location="lib/stryker/MuJavaPlus.jar" />
		<pathelement location="lib/stryker/openjava2005.jar" />
		<pathelement location="lib/stryker/openjml.jar" />
		<pathelement location="lib/stryker/stryker.jar" />
	</path>

	<!-- TASK DEFINITION -->
	<!-- init -->	
	<target name="init" description="copy requires files to /bin">
		<mkdir dir="bin" />
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src" excludes="**/*.launch, **/*.g, **/*.java" />
		</copy>
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="tests" excludes="**/*.launch, **/*.g, **/*.java" />
		</copy>
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="unittest" excludes="**/*.launch, **/*.g, **/*.java" />
		</copy>

	</target>

	<!-- Create jar file -->
	<target name="jar" depends="build">
		<mkdir dir="${basedir}/dist"/>
		<delete file="${basedir}/dist/${app.id}.jar"/>
		<delete dir="${basedir}/META-INF" />
		<buildnumber file="build.num"/>
		<tstamp>
		     <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss" />
		</tstamp>
		<jar jarfile="${basedir}/dist/${app.id}.jar" basedir="bin" includes="**/*.class **/*.djals **/*.als **/log4j.xml">
			<include id="${basedir}/dist/${app.id}_src.jar"/>
			<zipgroupfileset dir="${basedir}/lib" includes="*.jar" />
			<!--<zipfileset dir="${basedir}/src" prefix="sources" />--> 
			<manifest>
				<attribute name="Created-By" value="${app.createdBy}"/>
				<attribute name="Built-Date" value="${TODAY}"/>
				<attribute name="Main-Class" value="ar.edu.taco.TacoMain"/>
				<attribute name="Class-Path" value=" "/>
				<attribute name="Implementation-Version" value="${app.version}-b${build.number}"/>
			</manifest>
		</jar>
		<echo> Packing src files </echo>
		<zip destfile="${basedir}/dist/${app.id}_src.jar">
			<fileset dir="${basedir}" includes="src/**/*.java src/**/*.djals src/**/*.als src/**/.xml src/**/.g"/>			
			<fileset dir="${basedir}" includes="tests/**/*.java"/>			
			<fileset dir="${basedir}" includes="unittest/**/*.java"/>			
			<fileset dir="${basedir}" includes="config/**/*.properties"/>			
			<fileset dir="${basedir}" includes="specs/**/*"/>			
		</zip>
		<!-- These tasks remove secury definition files from external libs to avoid a security exception -->
		<zip destfile="temp-jar-file.jar">
			<fileset dir="${basedir}/dist" includes="${app.id}_src.jar"/>			
			<zipfileset src="${basedir}/dist/${app.id}.jar" excludes="META-INF/*.RSA, META-INF/*.DSA, META-INF/*.SF" />
		</zip>
		<move file="temp-jar-file.jar" tofile="${basedir}/dist/${app.id}.jar"/>
	</target>

	<!-- Build the project -->
	<target name="build" depends="compile" />

	<!-- Compile the project -->
	<target name="compile" depends="init">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
			<src path="src" />
			<exclude name="ar/edu/jdynalloy/jfsl/" />
			<exclude name="ar/edu/jdynalloy/parser/" />
			<classpath refid="build.classpath" />
		</javac>
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
			<src path="tests" />
			<classpath refid="build.classpath" />
		</javac>
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
			<src path="unittest" />
			<classpath refid="build.classpath" />
		</javac>
	</target>

	<!-- TESTS -->
	<!-- Unit test-->
	<target name="unittest" depends="build">
		<mkdir dir="${junit.output.dir}" />
		<junit fork="yes" printsummary="on">
			<jvmarg value="-Xmx1024m" />
			<jvmarg value="-Xms512m" />
			<jvmarg value="-Xss2048k" />
			<formatter type="xml" />
			<batchtest todir="${junit.output.dir}">
				<fileset dir="unittest" includes="**/*Test.java">
					<exclude name="ar.edu.dynjml4alloy.regresion.BaseRegresionTest" />
					<exclude name="ar.edu.dynjml4alloy.parser.common.JDynAlloyParserTest" />
				</fileset>
			</batchtest>
			<classpath refid="build.classpath" />
		</junit>
	</target>

	<!-- JUnit test reports -->
	<target name="junitreport">
		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.output.dir}" />
		</junitreport>
	</target>
	
	<!-- clear project and parser -->
	<target name="clean">
		<delete dir="bin" />
	</target>


</project>
